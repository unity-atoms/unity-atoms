#if UNITY_2019_1_OR_NEWER
using UnityEditor;
using UnityEngine.UIElements;
<%IF TYPE_HAS_NAMESPACE%>
using {TYPE_NAMESPACE};
<%ENDIF%>
<%IF HAS_SUB_UA_NAMESPACE%>
using UnityAtoms.Editor;
<%ENDIF%>

<%IF HAS_SUB_UA_NAMESPACE%>
namespace UnityAtoms.{SUB_UA_NAMESPACE}.Editor
<%ELSE%>
namespace UnityAtoms.Editor
<%ENDIF%>
{
    /// <summary>
    /// Event property drawer of type `{TYPE}`. Inherits from `AtomEventEditor&lt;{TYPE}, {TYPE_NAME}Event&gt;`. Only availble in `UNITY_2019_1_OR_NEWER`.
    /// </summary>
    [CustomEditor(typeof({TYPE_NAME}Event))]
    public sealed class {TYPE_NAME}EventEditor : AtomEventEditor<{TYPE}, {TYPE_NAME}Event>
    {
        protected override VisualElement GetRaiseValueInput()
        {
            var input = new Toggle() { label = "Raise value", name = "Raise value", viewDataKey = "Raise value" };
            input.RegisterCallback<ChangeEvent<{TYPE}>>((evt) => { _raiseValue = evt.newValue; });
            return input;
        }
    }
}
#endif
